Terminals unused in grammar

   TOKEN_ERRO
   '&'


State 120 conflicts: 1 shift/reduce


Grammar

    0 $accept: programa $end

    1 programa: declist

    2 declist: funcao declist
    3        | varglobal ';' declist
    4        | %empty

    5 varglobal: newtype
    6          | newvar

    7 newvar: TK_PR_STATIC vardecl
    8       | vardecl

    9 vardecl: vartype TK_IDENTIFICADOR
   10        | vartype TK_IDENTIFICADOR '[' IntList ']'

   11 IntList: TK_LIT_INT ',' IntList
   12        | TK_LIT_INT

   13 newtype: newtypedecl

   14 newtypedecl: TK_PR_CLASS newtypevar

   15 newtypevar: TK_IDENTIFICADOR '[' fields ']'

   16 fields: fieldencap vartype fieldid

   17 fieldencap: TK_PR_PROTECTED
   18           | TK_PR_PRIVATE
   19           | TK_PR_PUBLIC

   20 vartype: TK_PR_INT
   21        | TK_PR_FLOAT
   22        | TK_PR_CHAR
   23        | TK_PR_STRING
   24        | TK_PR_BOOL

   25 fieldid: TK_IDENTIFICADOR
   26        | TK_IDENTIFICADOR ':' fields

   27 funcao: TK_PR_STATIC funcdecl
   28       | funcdecl

   29 $@1: %empty

   30 $@2: %empty

   31 funcdecl: vartype TK_IDENTIFICADOR $@1 '(' arg ')' $@2 '{' listcom '}'

   32 arg: %empty
   33    | arglist

   34 arglist: argsdecl
   35        | argsdecl ',' arglist

   36 argsdecl: TK_PR_CONST vartype TK_IDENTIFICADOR
   37         | vartype TK_IDENTIFICADOR

   38 comsimples: comdecl
   39           | comatr
   40           | comio
   41           | callfunc
   42           | comshift
   43           | RBCC
   44           | comflux
   45           | combloco

   46 comdecl: TK_PR_STATIC comvar
   47        | TK_PR_STATIC TK_PR_CONST comvar
   48        | TK_PR_CONST comvar
   49        | comvar

   50 comvar: vartype TK_IDENTIFICADOR
   51       | vartype TK_IDENTIFICADOR '[' IntList ']'
   52       | vartype TK_IDENTIFICADOR TK_OC_LE initvar

   53 initvar: TK_IDENTIFICADOR
   54        | literal

   55 comatr: TK_IDENTIFICADOR '=' exp
   56       | TK_IDENTIFICADOR '[' Vexplist ']' '=' exp
   57       | TK_IDENTIFICADOR '!' TK_IDENTIFICADOR '=' exp

   58 comio: comin
   59      | comout

   60 comin: TK_PR_INPUT exp

   61 comout: TK_PR_OUTPUT listexp

   62 $@3: %empty

   63 callfunc: TK_IDENTIFICADOR $@3 '(' calldecl ')'

   64 calldecl: listexp
   65         | %empty

   66 comshift: TK_IDENTIFICADOR TK_OC_SL litnumber
   67         | TK_IDENTIFICADOR TK_OC_SR litnumber

   68 RBCC: comreturn
   69     | combreak
   70     | comcontinue
   71     | comcase

   72 comreturn: TK_PR_RETURN exp

   73 combreak: TK_PR_BREAK

   74 comcontinue: TK_PR_CONTINUE

   75 comcase: TK_PR_CASE TK_LIT_INT ':' comsimples ';' combreak
   76        | TK_PR_CASE TK_LIT_INT ':' comsimples ';' combreak comcase

   77 comflux: comif
   78        | comshitch
   79        | comfore
   80        | comfor
   81        | comwhile
   82        | comdo

   83 comif: TK_PR_IF exp TK_PR_THEN comsimples ';'
   84      | TK_PR_IF exp TK_PR_THEN comsimples ';' TK_PR_ELSE comsimples

   85 comfore: TK_PR_FOREACH '(' TK_IDENTIFICADOR ':' listexp ')' comsimples

   86 comfor: TK_PR_FOR '(' listcomfor ':' exp ':' listcomfor ')' comsimples

   87 listcomfor: listcomfor ',' comsimples
   88           | comsimples

   89 comwhile: TK_PR_WHILE '(' exp ')' TK_PR_DO comsimples ';'

   90 comdo: TK_PR_DO comsimples ';' TK_PR_WHILE '(' exp ')' ';'

   91 comshitch: TK_PR_SWITCH '(' exp ')' comsimples

   92 $@4: %empty

   93 combloco: $@4 '{' listcom '}'

   94 listcom: comandoCV ';' listcom
   95        | comandoCV

   96 comandoCV: comsimples
   97          | %empty

   98 exp: exp '+' exp
   99    | exp '-' exp
  100    | exp '*' exp
  101    | exp '/' exp
  102    | exp '%' exp
  103    | exp '<' exp
  104    | exp '>' exp
  105    | exp TK_OC_LE exp
  106    | exp TK_OC_GE exp
  107    | exp TK_OC_EQ exp
  108    | exp TK_OC_NE exp
  109    | exp TK_OC_AND exp
  110    | exp TK_OC_OR exp
  111    | '(' exp ')'
  112    | '+' exp
  113    | '-' exp
  114    | '!' exp
  115    | callfunc
  116    | folha

  117 folha: TK_IDENTIFICADOR
  118      | TK_IDENTIFICADOR '[' Vexplist ']'
  119      | literal

  120 Vexplist: exp ',' Vexplist
  121         | exp

  122 listexp: exp ',' listexp
  123        | exp

  124 litnumber: TK_LIT_INT
  125          | TK_LIT_FLOAT

  126 literal: litnumber
  127        | TK_LIT_STRING
  128        | TK_LIT_CHAR
  129        | TK_LIT_TRUE
  130        | TK_LIT_FALSE


Terminals, with rules where they appear

$end (0) 0
'!' (33) 57 114
'%' (37) 102
'&' (38)
'(' (40) 31 63 85 86 89 90 91 111
')' (41) 31 63 85 86 89 90 91 111
'*' (42) 100
'+' (43) 98 112
',' (44) 11 35 87 120 122
'-' (45) 99 113
'/' (47) 101
':' (58) 26 75 76 85 86
';' (59) 3 75 76 83 84 89 90 94
'<' (60) 103
'=' (61) 55 56 57
'>' (62) 104
'[' (91) 10 15 51 56 118
']' (93) 10 15 51 56 118
'{' (123) 31 93
'}' (125) 31 93
error (256)
TK_PR_INT (258) 20
TK_PR_FLOAT (259) 21
TK_PR_BOOL (260) 24
TK_PR_CHAR (261) 22
TK_PR_STRING (262) 23
TK_PR_IF (263) 83 84
TK_PR_THEN (264) 83 84
TK_PR_ELSE (265) 84
TK_PR_WHILE (266) 89 90
TK_PR_DO (267) 89 90
TK_PR_INPUT (268) 60
TK_PR_OUTPUT (269) 61
TK_PR_RETURN (270) 72
TK_PR_CONST (271) 36 47 48
TK_PR_STATIC (272) 7 27 46 47
TK_PR_FOREACH (273) 85
TK_PR_FOR (274) 86
TK_PR_SWITCH (275) 91
TK_PR_CASE (276) 75 76
TK_PR_BREAK (277) 73
TK_PR_CONTINUE (278) 74
TK_PR_CLASS (279) 14
TK_PR_PRIVATE (280) 18
TK_PR_PUBLIC (281) 19
TK_PR_PROTECTED (282) 17
TK_OC_LE (283) 52 105
TK_OC_GE (284) 106
TK_OC_EQ (285) 107
TK_OC_NE (286) 108
TK_OC_AND (287) 109
TK_OC_OR (288) 110
TK_OC_SL (289) 66
TK_OC_SR (290) 67
TK_LIT_INT (291) 11 12 75 76 124
TK_LIT_FLOAT (292) 125
TK_LIT_FALSE (293) 130
TK_LIT_TRUE (294) 129
TK_LIT_CHAR (295) 128
TK_LIT_STRING (296) 127
TK_IDENTIFICADOR (297) 9 10 15 25 26 31 36 37 50 51 52 53 55 56 57
    63 66 67 85 117 118
TOKEN_ERRO (298)


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
programa (64)
    on left: 1, on right: 0
declist (65)
    on left: 2 3 4, on right: 1 2 3
varglobal (66)
    on left: 5 6, on right: 3
newvar (67)
    on left: 7 8, on right: 6
vardecl (68)
    on left: 9 10, on right: 7 8
IntList (69)
    on left: 11 12, on right: 10 11 51
newtype (70)
    on left: 13, on right: 5
newtypedecl (71)
    on left: 14, on right: 13
newtypevar (72)
    on left: 15, on right: 14
fields (73)
    on left: 16, on right: 15 26
fieldencap (74)
    on left: 17 18 19, on right: 16
vartype (75)
    on left: 20 21 22 23 24, on right: 9 10 16 31 36 37 50 51 52
fieldid (76)
    on left: 25 26, on right: 16
funcao (77)
    on left: 27 28, on right: 2
funcdecl (78)
    on left: 31, on right: 27 28
$@1 (79)
    on left: 29, on right: 31
$@2 (80)
    on left: 30, on right: 31
arg (81)
    on left: 32 33, on right: 31
arglist (82)
    on left: 34 35, on right: 33 35
argsdecl (83)
    on left: 36 37, on right: 34 35
comsimples (84)
    on left: 38 39 40 41 42 43 44 45, on right: 75 76 83 84 85 86 87
    88 89 90 91 96
comdecl (85)
    on left: 46 47 48 49, on right: 38
comvar (86)
    on left: 50 51 52, on right: 46 47 48 49
initvar (87)
    on left: 53 54, on right: 52
comatr (88)
    on left: 55 56 57, on right: 39
comio (89)
    on left: 58 59, on right: 40
comin (90)
    on left: 60, on right: 58
comout (91)
    on left: 61, on right: 59
callfunc (92)
    on left: 63, on right: 41 115
$@3 (93)
    on left: 62, on right: 63
calldecl (94)
    on left: 64 65, on right: 63
comshift (95)
    on left: 66 67, on right: 42
RBCC (96)
    on left: 68 69 70 71, on right: 43
comreturn (97)
    on left: 72, on right: 68
combreak (98)
    on left: 73, on right: 69 75 76
comcontinue (99)
    on left: 74, on right: 70
comcase (100)
    on left: 75 76, on right: 71 76
comflux (101)
    on left: 77 78 79 80 81 82, on right: 44
comif (102)
    on left: 83 84, on right: 77
comfore (103)
    on left: 85, on right: 79
comfor (104)
    on left: 86, on right: 80
listcomfor (105)
    on left: 87 88, on right: 86 87
comwhile (106)
    on left: 89, on right: 81
comdo (107)
    on left: 90, on right: 82
comshitch (108)
    on left: 91, on right: 78
combloco (109)
    on left: 93, on right: 45
$@4 (110)
    on left: 92, on right: 93
listcom (111)
    on left: 94 95, on right: 31 93 94
comandoCV (112)
    on left: 96 97, on right: 94 95
exp (113)
    on left: 98 99 100 101 102 103 104 105 106 107 108 109 110 111
    112 113 114 115 116, on right: 55 56 57 60 72 83 84 86 89 90 91
    98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114
    120 121 122 123
folha (114)
    on left: 117 118 119, on right: 116
Vexplist (115)
    on left: 120 121, on right: 56 118 120
listexp (116)
    on left: 122 123, on right: 61 64 85 122
litnumber (117)
    on left: 124 125, on right: 66 67 126
literal (118)
    on left: 126 127 128 129 130, on right: 54 119


State 0

    0 $accept: . programa $end

    TK_PR_INT     shift, and go to state 1
    TK_PR_FLOAT   shift, and go to state 2
    TK_PR_BOOL    shift, and go to state 3
    TK_PR_CHAR    shift, and go to state 4
    TK_PR_STRING  shift, and go to state 5
    TK_PR_STATIC  shift, and go to state 6
    TK_PR_CLASS   shift, and go to state 7

    $default  reduce using rule 4 (declist)

    programa     go to state 8
    declist      go to state 9
    varglobal    go to state 10
    newvar       go to state 11
    vardecl      go to state 12
    newtype      go to state 13
    newtypedecl  go to state 14
    vartype      go to state 15
    funcao       go to state 16
    funcdecl     go to state 17


State 1

   20 vartype: TK_PR_INT .

    $default  reduce using rule 20 (vartype)


State 2

   21 vartype: TK_PR_FLOAT .

    $default  reduce using rule 21 (vartype)


State 3

   24 vartype: TK_PR_BOOL .

    $default  reduce using rule 24 (vartype)


State 4

   22 vartype: TK_PR_CHAR .

    $default  reduce using rule 22 (vartype)


State 5

   23 vartype: TK_PR_STRING .

    $default  reduce using rule 23 (vartype)


State 6

    7 newvar: TK_PR_STATIC . vardecl
   27 funcao: TK_PR_STATIC . funcdecl

    TK_PR_INT     shift, and go to state 1
    TK_PR_FLOAT   shift, and go to state 2
    TK_PR_BOOL    shift, and go to state 3
    TK_PR_CHAR    shift, and go to state 4
    TK_PR_STRING  shift, and go to state 5

    vardecl   go to state 18
    vartype   go to state 15
    funcdecl  go to state 19


State 7

   14 newtypedecl: TK_PR_CLASS . newtypevar

    TK_IDENTIFICADOR  shift, and go to state 20

    newtypevar  go to state 21


State 8

    0 $accept: programa . $end

    $end  shift, and go to state 22


State 9

    1 programa: declist .

    $default  reduce using rule 1 (programa)


State 10

    3 declist: varglobal . ';' declist

    ';'  shift, and go to state 23


State 11

    6 varglobal: newvar .

    $default  reduce using rule 6 (varglobal)


State 12

    8 newvar: vardecl .

    $default  reduce using rule 8 (newvar)


State 13

    5 varglobal: newtype .

    $default  reduce using rule 5 (varglobal)


State 14

   13 newtype: newtypedecl .

    $default  reduce using rule 13 (newtype)


State 15

    9 vardecl: vartype . TK_IDENTIFICADOR
   10        | vartype . TK_IDENTIFICADOR '[' IntList ']'
   31 funcdecl: vartype . TK_IDENTIFICADOR $@1 '(' arg ')' $@2 '{' listcom '}'

    TK_IDENTIFICADOR  shift, and go to state 24


State 16

    2 declist: funcao . declist

    TK_PR_INT     shift, and go to state 1
    TK_PR_FLOAT   shift, and go to state 2
    TK_PR_BOOL    shift, and go to state 3
    TK_PR_CHAR    shift, and go to state 4
    TK_PR_STRING  shift, and go to state 5
    TK_PR_STATIC  shift, and go to state 6
    TK_PR_CLASS   shift, and go to state 7

    $default  reduce using rule 4 (declist)

    declist      go to state 25
    varglobal    go to state 10
    newvar       go to state 11
    vardecl      go to state 12
    newtype      go to state 13
    newtypedecl  go to state 14
    vartype      go to state 15
    funcao       go to state 16
    funcdecl     go to state 17


State 17

   28 funcao: funcdecl .

    $default  reduce using rule 28 (funcao)


State 18

    7 newvar: TK_PR_STATIC vardecl .

    $default  reduce using rule 7 (newvar)


State 19

   27 funcao: TK_PR_STATIC funcdecl .

    $default  reduce using rule 27 (funcao)


State 20

   15 newtypevar: TK_IDENTIFICADOR . '[' fields ']'

    '['  shift, and go to state 26


State 21

   14 newtypedecl: TK_PR_CLASS newtypevar .

    $default  reduce using rule 14 (newtypedecl)


State 22

    0 $accept: programa $end .

    $default  accept


State 23

    3 declist: varglobal ';' . declist

    TK_PR_INT     shift, and go to state 1
    TK_PR_FLOAT   shift, and go to state 2
    TK_PR_BOOL    shift, and go to state 3
    TK_PR_CHAR    shift, and go to state 4
    TK_PR_STRING  shift, and go to state 5
    TK_PR_STATIC  shift, and go to state 6
    TK_PR_CLASS   shift, and go to state 7

    $default  reduce using rule 4 (declist)

    declist      go to state 27
    varglobal    go to state 10
    newvar       go to state 11
    vardecl      go to state 12
    newtype      go to state 13
    newtypedecl  go to state 14
    vartype      go to state 15
    funcao       go to state 16
    funcdecl     go to state 17


State 24

    9 vardecl: vartype TK_IDENTIFICADOR .
   10        | vartype TK_IDENTIFICADOR . '[' IntList ']'
   31 funcdecl: vartype TK_IDENTIFICADOR . $@1 '(' arg ')' $@2 '{' listcom '}'

    '['  shift, and go to state 28

    '('       reduce using rule 29 ($@1)
    $default  reduce using rule 9 (vardecl)

    $@1  go to state 29


State 25

    2 declist: funcao declist .

    $default  reduce using rule 2 (declist)


State 26

   15 newtypevar: TK_IDENTIFICADOR '[' . fields ']'

    TK_PR_PRIVATE    shift, and go to state 30
    TK_PR_PUBLIC     shift, and go to state 31
    TK_PR_PROTECTED  shift, and go to state 32

    fields      go to state 33
    fieldencap  go to state 34


State 27

    3 declist: varglobal ';' declist .

    $default  reduce using rule 3 (declist)


State 28

   10 vardecl: vartype TK_IDENTIFICADOR '[' . IntList ']'

    TK_LIT_INT  shift, and go to state 35

    IntList  go to state 36


State 29

   31 funcdecl: vartype TK_IDENTIFICADOR $@1 . '(' arg ')' $@2 '{' listcom '}'

    '('  shift, and go to state 37


State 30

   18 fieldencap: TK_PR_PRIVATE .

    $default  reduce using rule 18 (fieldencap)


State 31

   19 fieldencap: TK_PR_PUBLIC .

    $default  reduce using rule 19 (fieldencap)


State 32

   17 fieldencap: TK_PR_PROTECTED .

    $default  reduce using rule 17 (fieldencap)


State 33

   15 newtypevar: TK_IDENTIFICADOR '[' fields . ']'

    ']'  shift, and go to state 38


State 34

   16 fields: fieldencap . vartype fieldid

    TK_PR_INT     shift, and go to state 1
    TK_PR_FLOAT   shift, and go to state 2
    TK_PR_BOOL    shift, and go to state 3
    TK_PR_CHAR    shift, and go to state 4
    TK_PR_STRING  shift, and go to state 5

    vartype  go to state 39


State 35

   11 IntList: TK_LIT_INT . ',' IntList
   12        | TK_LIT_INT .

    ','  shift, and go to state 40

    $default  reduce using rule 12 (IntList)


State 36

   10 vardecl: vartype TK_IDENTIFICADOR '[' IntList . ']'

    ']'  shift, and go to state 41


State 37

   31 funcdecl: vartype TK_IDENTIFICADOR $@1 '(' . arg ')' $@2 '{' listcom '}'

    TK_PR_INT     shift, and go to state 1
    TK_PR_FLOAT   shift, and go to state 2
    TK_PR_BOOL    shift, and go to state 3
    TK_PR_CHAR    shift, and go to state 4
    TK_PR_STRING  shift, and go to state 5
    TK_PR_CONST   shift, and go to state 42

    $default  reduce using rule 32 (arg)

    vartype   go to state 43
    arg       go to state 44
    arglist   go to state 45
    argsdecl  go to state 46


State 38

   15 newtypevar: TK_IDENTIFICADOR '[' fields ']' .

    $default  reduce using rule 15 (newtypevar)


State 39

   16 fields: fieldencap vartype . fieldid

    TK_IDENTIFICADOR  shift, and go to state 47

    fieldid  go to state 48


State 40

   11 IntList: TK_LIT_INT ',' . IntList

    TK_LIT_INT  shift, and go to state 35

    IntList  go to state 49


State 41

   10 vardecl: vartype TK_IDENTIFICADOR '[' IntList ']' .

    $default  reduce using rule 10 (vardecl)


State 42

   36 argsdecl: TK_PR_CONST . vartype TK_IDENTIFICADOR

    TK_PR_INT     shift, and go to state 1
    TK_PR_FLOAT   shift, and go to state 2
    TK_PR_BOOL    shift, and go to state 3
    TK_PR_CHAR    shift, and go to state 4
    TK_PR_STRING  shift, and go to state 5

    vartype  go to state 50


State 43

   37 argsdecl: vartype . TK_IDENTIFICADOR

    TK_IDENTIFICADOR  shift, and go to state 51


State 44

   31 funcdecl: vartype TK_IDENTIFICADOR $@1 '(' arg . ')' $@2 '{' listcom '}'

    ')'  shift, and go to state 52


State 45

   33 arg: arglist .

    $default  reduce using rule 33 (arg)


State 46

   34 arglist: argsdecl .
   35        | argsdecl . ',' arglist

    ','  shift, and go to state 53

    $default  reduce using rule 34 (arglist)


State 47

   25 fieldid: TK_IDENTIFICADOR .
   26        | TK_IDENTIFICADOR . ':' fields

    ':'  shift, and go to state 54

    $default  reduce using rule 25 (fieldid)


State 48

   16 fields: fieldencap vartype fieldid .

    $default  reduce using rule 16 (fields)


State 49

   11 IntList: TK_LIT_INT ',' IntList .

    $default  reduce using rule 11 (IntList)


State 50

   36 argsdecl: TK_PR_CONST vartype . TK_IDENTIFICADOR

    TK_IDENTIFICADOR  shift, and go to state 55


State 51

   37 argsdecl: vartype TK_IDENTIFICADOR .

    $default  reduce using rule 37 (argsdecl)


State 52

   31 funcdecl: vartype TK_IDENTIFICADOR $@1 '(' arg ')' . $@2 '{' listcom '}'

    $default  reduce using rule 30 ($@2)

    $@2  go to state 56


State 53

   35 arglist: argsdecl ',' . arglist

    TK_PR_INT     shift, and go to state 1
    TK_PR_FLOAT   shift, and go to state 2
    TK_PR_BOOL    shift, and go to state 3
    TK_PR_CHAR    shift, and go to state 4
    TK_PR_STRING  shift, and go to state 5
    TK_PR_CONST   shift, and go to state 42

    vartype   go to state 43
    arglist   go to state 57
    argsdecl  go to state 46


State 54

   26 fieldid: TK_IDENTIFICADOR ':' . fields

    TK_PR_PRIVATE    shift, and go to state 30
    TK_PR_PUBLIC     shift, and go to state 31
    TK_PR_PROTECTED  shift, and go to state 32

    fields      go to state 58
    fieldencap  go to state 34


State 55

   36 argsdecl: TK_PR_CONST vartype TK_IDENTIFICADOR .

    $default  reduce using rule 36 (argsdecl)


State 56

   31 funcdecl: vartype TK_IDENTIFICADOR $@1 '(' arg ')' $@2 . '{' listcom '}'

    '{'  shift, and go to state 59


State 57

   35 arglist: argsdecl ',' arglist .

    $default  reduce using rule 35 (arglist)


State 58

   26 fieldid: TK_IDENTIFICADOR ':' fields .

    $default  reduce using rule 26 (fieldid)


State 59

   31 funcdecl: vartype TK_IDENTIFICADOR $@1 '(' arg ')' $@2 '{' . listcom '}'

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_IF          shift, and go to state 60
    TK_PR_WHILE       shift, and go to state 61
    TK_PR_DO          shift, and go to state 62
    TK_PR_INPUT       shift, and go to state 63
    TK_PR_OUTPUT      shift, and go to state 64
    TK_PR_RETURN      shift, and go to state 65
    TK_PR_CONST       shift, and go to state 66
    TK_PR_STATIC      shift, and go to state 67
    TK_PR_FOREACH     shift, and go to state 68
    TK_PR_FOR         shift, and go to state 69
    TK_PR_SWITCH      shift, and go to state 70
    TK_PR_CASE        shift, and go to state 71
    TK_PR_BREAK       shift, and go to state 72
    TK_PR_CONTINUE    shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74

    '{'       reduce using rule 92 ($@4)
    $default  reduce using rule 97 (comandoCV)

    vartype      go to state 75
    comsimples   go to state 76
    comdecl      go to state 77
    comvar       go to state 78
    comatr       go to state 79
    comio        go to state 80
    comin        go to state 81
    comout       go to state 82
    callfunc     go to state 83
    comshift     go to state 84
    RBCC         go to state 85
    comreturn    go to state 86
    combreak     go to state 87
    comcontinue  go to state 88
    comcase      go to state 89
    comflux      go to state 90
    comif        go to state 91
    comfore      go to state 92
    comfor       go to state 93
    comwhile     go to state 94
    comdo        go to state 95
    comshitch    go to state 96
    combloco     go to state 97
    $@4          go to state 98
    listcom      go to state 99
    comandoCV    go to state 100


State 60

   83 comif: TK_PR_IF . exp TK_PR_THEN comsimples ';'
   84      | TK_PR_IF . exp TK_PR_THEN comsimples ';' TK_PR_ELSE comsimples

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 113
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 61

   89 comwhile: TK_PR_WHILE . '(' exp ')' TK_PR_DO comsimples ';'

    '('  shift, and go to state 117


State 62

   90 comdo: TK_PR_DO . comsimples ';' TK_PR_WHILE '(' exp ')' ';'

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_IF          shift, and go to state 60
    TK_PR_WHILE       shift, and go to state 61
    TK_PR_DO          shift, and go to state 62
    TK_PR_INPUT       shift, and go to state 63
    TK_PR_OUTPUT      shift, and go to state 64
    TK_PR_RETURN      shift, and go to state 65
    TK_PR_CONST       shift, and go to state 66
    TK_PR_STATIC      shift, and go to state 67
    TK_PR_FOREACH     shift, and go to state 68
    TK_PR_FOR         shift, and go to state 69
    TK_PR_SWITCH      shift, and go to state 70
    TK_PR_CASE        shift, and go to state 71
    TK_PR_BREAK       shift, and go to state 72
    TK_PR_CONTINUE    shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74

    $default  reduce using rule 92 ($@4)

    vartype      go to state 75
    comsimples   go to state 118
    comdecl      go to state 77
    comvar       go to state 78
    comatr       go to state 79
    comio        go to state 80
    comin        go to state 81
    comout       go to state 82
    callfunc     go to state 83
    comshift     go to state 84
    RBCC         go to state 85
    comreturn    go to state 86
    combreak     go to state 87
    comcontinue  go to state 88
    comcase      go to state 89
    comflux      go to state 90
    comif        go to state 91
    comfore      go to state 92
    comfor       go to state 93
    comwhile     go to state 94
    comdo        go to state 95
    comshitch    go to state 96
    combloco     go to state 97
    $@4          go to state 98


State 63

   60 comin: TK_PR_INPUT . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 119
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 64

   61 comout: TK_PR_OUTPUT . listexp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 120
    folha      go to state 114
    listexp    go to state 121
    litnumber  go to state 115
    literal    go to state 116


State 65

   72 comreturn: TK_PR_RETURN . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 122
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 66

   48 comdecl: TK_PR_CONST . comvar

    TK_PR_INT     shift, and go to state 1
    TK_PR_FLOAT   shift, and go to state 2
    TK_PR_BOOL    shift, and go to state 3
    TK_PR_CHAR    shift, and go to state 4
    TK_PR_STRING  shift, and go to state 5

    vartype  go to state 75
    comvar   go to state 123


State 67

   46 comdecl: TK_PR_STATIC . comvar
   47        | TK_PR_STATIC . TK_PR_CONST comvar

    TK_PR_INT     shift, and go to state 1
    TK_PR_FLOAT   shift, and go to state 2
    TK_PR_BOOL    shift, and go to state 3
    TK_PR_CHAR    shift, and go to state 4
    TK_PR_STRING  shift, and go to state 5
    TK_PR_CONST   shift, and go to state 124

    vartype  go to state 75
    comvar   go to state 125


State 68

   85 comfore: TK_PR_FOREACH . '(' TK_IDENTIFICADOR ':' listexp ')' comsimples

    '('  shift, and go to state 126


State 69

   86 comfor: TK_PR_FOR . '(' listcomfor ':' exp ':' listcomfor ')' comsimples

    '('  shift, and go to state 127


State 70

   91 comshitch: TK_PR_SWITCH . '(' exp ')' comsimples

    '('  shift, and go to state 128


State 71

   75 comcase: TK_PR_CASE . TK_LIT_INT ':' comsimples ';' combreak
   76        | TK_PR_CASE . TK_LIT_INT ':' comsimples ';' combreak comcase

    TK_LIT_INT  shift, and go to state 129


State 72

   73 combreak: TK_PR_BREAK .

    $default  reduce using rule 73 (combreak)


State 73

   74 comcontinue: TK_PR_CONTINUE .

    $default  reduce using rule 74 (comcontinue)


State 74

   55 comatr: TK_IDENTIFICADOR . '=' exp
   56       | TK_IDENTIFICADOR . '[' Vexplist ']' '=' exp
   57       | TK_IDENTIFICADOR . '!' TK_IDENTIFICADOR '=' exp
   63 callfunc: TK_IDENTIFICADOR . $@3 '(' calldecl ')'
   66 comshift: TK_IDENTIFICADOR . TK_OC_SL litnumber
   67         | TK_IDENTIFICADOR . TK_OC_SR litnumber

    TK_OC_SL  shift, and go to state 130
    TK_OC_SR  shift, and go to state 131
    '!'       shift, and go to state 132
    '='       shift, and go to state 133
    '['       shift, and go to state 134

    $default  reduce using rule 62 ($@3)

    $@3  go to state 135


State 75

   50 comvar: vartype . TK_IDENTIFICADOR
   51       | vartype . TK_IDENTIFICADOR '[' IntList ']'
   52       | vartype . TK_IDENTIFICADOR TK_OC_LE initvar

    TK_IDENTIFICADOR  shift, and go to state 136


State 76

   96 comandoCV: comsimples .

    $default  reduce using rule 96 (comandoCV)


State 77

   38 comsimples: comdecl .

    $default  reduce using rule 38 (comsimples)


State 78

   49 comdecl: comvar .

    $default  reduce using rule 49 (comdecl)


State 79

   39 comsimples: comatr .

    $default  reduce using rule 39 (comsimples)


State 80

   40 comsimples: comio .

    $default  reduce using rule 40 (comsimples)


State 81

   58 comio: comin .

    $default  reduce using rule 58 (comio)


State 82

   59 comio: comout .

    $default  reduce using rule 59 (comio)


State 83

   41 comsimples: callfunc .

    $default  reduce using rule 41 (comsimples)


State 84

   42 comsimples: comshift .

    $default  reduce using rule 42 (comsimples)


State 85

   43 comsimples: RBCC .

    $default  reduce using rule 43 (comsimples)


State 86

   68 RBCC: comreturn .

    $default  reduce using rule 68 (RBCC)


State 87

   69 RBCC: combreak .

    $default  reduce using rule 69 (RBCC)


State 88

   70 RBCC: comcontinue .

    $default  reduce using rule 70 (RBCC)


State 89

   71 RBCC: comcase .

    $default  reduce using rule 71 (RBCC)


State 90

   44 comsimples: comflux .

    $default  reduce using rule 44 (comsimples)


State 91

   77 comflux: comif .

    $default  reduce using rule 77 (comflux)


State 92

   79 comflux: comfore .

    $default  reduce using rule 79 (comflux)


State 93

   80 comflux: comfor .

    $default  reduce using rule 80 (comflux)


State 94

   81 comflux: comwhile .

    $default  reduce using rule 81 (comflux)


State 95

   82 comflux: comdo .

    $default  reduce using rule 82 (comflux)


State 96

   78 comflux: comshitch .

    $default  reduce using rule 78 (comflux)


State 97

   45 comsimples: combloco .

    $default  reduce using rule 45 (comsimples)


State 98

   93 combloco: $@4 . '{' listcom '}'

    '{'  shift, and go to state 137


State 99

   31 funcdecl: vartype TK_IDENTIFICADOR $@1 '(' arg ')' $@2 '{' listcom . '}'

    '}'  shift, and go to state 138


State 100

   94 listcom: comandoCV . ';' listcom
   95        | comandoCV .

    ';'  shift, and go to state 139

    $default  reduce using rule 95 (listcom)


State 101

  124 litnumber: TK_LIT_INT .

    $default  reduce using rule 124 (litnumber)


State 102

  125 litnumber: TK_LIT_FLOAT .

    $default  reduce using rule 125 (litnumber)


State 103

  130 literal: TK_LIT_FALSE .

    $default  reduce using rule 130 (literal)


State 104

  129 literal: TK_LIT_TRUE .

    $default  reduce using rule 129 (literal)


State 105

  128 literal: TK_LIT_CHAR .

    $default  reduce using rule 128 (literal)


State 106

  127 literal: TK_LIT_STRING .

    $default  reduce using rule 127 (literal)


State 107

   63 callfunc: TK_IDENTIFICADOR . $@3 '(' calldecl ')'
  117 folha: TK_IDENTIFICADOR .
  118      | TK_IDENTIFICADOR . '[' Vexplist ']'

    '['  shift, and go to state 140

    '('       reduce using rule 62 ($@3)
    $default  reduce using rule 117 (folha)

    $@3  go to state 135


State 108

  112 exp: '+' . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 141
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 109

  113 exp: '-' . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 142
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 110

  114 exp: '!' . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 143
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 111

  111 exp: '(' . exp ')'

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 144
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 112

  115 exp: callfunc .

    $default  reduce using rule 115 (exp)


State 113

   83 comif: TK_PR_IF exp . TK_PR_THEN comsimples ';'
   84      | TK_PR_IF exp . TK_PR_THEN comsimples ';' TK_PR_ELSE comsimples
   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_PR_THEN  shift, and go to state 145
    TK_OC_LE    shift, and go to state 146
    TK_OC_GE    shift, and go to state 147
    TK_OC_EQ    shift, and go to state 148
    TK_OC_NE    shift, and go to state 149
    TK_OC_AND   shift, and go to state 150
    TK_OC_OR    shift, and go to state 151
    '+'         shift, and go to state 152
    '-'         shift, and go to state 153
    '*'         shift, and go to state 154
    '/'         shift, and go to state 155
    '%'         shift, and go to state 156
    '<'         shift, and go to state 157
    '>'         shift, and go to state 158


State 114

  116 exp: folha .

    $default  reduce using rule 116 (exp)


State 115

  126 literal: litnumber .

    $default  reduce using rule 126 (literal)


State 116

  119 folha: literal .

    $default  reduce using rule 119 (folha)


State 117

   89 comwhile: TK_PR_WHILE '(' . exp ')' TK_PR_DO comsimples ';'

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 159
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 118

   90 comdo: TK_PR_DO comsimples . ';' TK_PR_WHILE '(' exp ')' ';'

    ';'  shift, and go to state 160


State 119

   60 comin: TK_PR_INPUT exp .
   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_OC_LE   shift, and go to state 146
    TK_OC_GE   shift, and go to state 147
    TK_OC_EQ   shift, and go to state 148
    TK_OC_NE   shift, and go to state 149
    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151
    '+'        shift, and go to state 152
    '-'        shift, and go to state 153
    '*'        shift, and go to state 154
    '/'        shift, and go to state 155
    '%'        shift, and go to state 156
    '<'        shift, and go to state 157
    '>'        shift, and go to state 158

    $default  reduce using rule 60 (comin)


State 120

   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp
  122 listexp: exp . ',' listexp
  123        | exp .

    TK_OC_LE   shift, and go to state 146
    TK_OC_GE   shift, and go to state 147
    TK_OC_EQ   shift, and go to state 148
    TK_OC_NE   shift, and go to state 149
    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151
    '+'        shift, and go to state 152
    '-'        shift, and go to state 153
    '*'        shift, and go to state 154
    '/'        shift, and go to state 155
    '%'        shift, and go to state 156
    '<'        shift, and go to state 157
    '>'        shift, and go to state 158
    ','        shift, and go to state 161

    ','       [reduce using rule 123 (listexp)]
    $default  reduce using rule 123 (listexp)


State 121

   61 comout: TK_PR_OUTPUT listexp .

    $default  reduce using rule 61 (comout)


State 122

   72 comreturn: TK_PR_RETURN exp .
   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_OC_LE   shift, and go to state 146
    TK_OC_GE   shift, and go to state 147
    TK_OC_EQ   shift, and go to state 148
    TK_OC_NE   shift, and go to state 149
    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151
    '+'        shift, and go to state 152
    '-'        shift, and go to state 153
    '*'        shift, and go to state 154
    '/'        shift, and go to state 155
    '%'        shift, and go to state 156
    '<'        shift, and go to state 157
    '>'        shift, and go to state 158

    $default  reduce using rule 72 (comreturn)


State 123

   48 comdecl: TK_PR_CONST comvar .

    $default  reduce using rule 48 (comdecl)


State 124

   47 comdecl: TK_PR_STATIC TK_PR_CONST . comvar

    TK_PR_INT     shift, and go to state 1
    TK_PR_FLOAT   shift, and go to state 2
    TK_PR_BOOL    shift, and go to state 3
    TK_PR_CHAR    shift, and go to state 4
    TK_PR_STRING  shift, and go to state 5

    vartype  go to state 75
    comvar   go to state 162


State 125

   46 comdecl: TK_PR_STATIC comvar .

    $default  reduce using rule 46 (comdecl)


State 126

   85 comfore: TK_PR_FOREACH '(' . TK_IDENTIFICADOR ':' listexp ')' comsimples

    TK_IDENTIFICADOR  shift, and go to state 163


State 127

   86 comfor: TK_PR_FOR '(' . listcomfor ':' exp ':' listcomfor ')' comsimples

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_IF          shift, and go to state 60
    TK_PR_WHILE       shift, and go to state 61
    TK_PR_DO          shift, and go to state 62
    TK_PR_INPUT       shift, and go to state 63
    TK_PR_OUTPUT      shift, and go to state 64
    TK_PR_RETURN      shift, and go to state 65
    TK_PR_CONST       shift, and go to state 66
    TK_PR_STATIC      shift, and go to state 67
    TK_PR_FOREACH     shift, and go to state 68
    TK_PR_FOR         shift, and go to state 69
    TK_PR_SWITCH      shift, and go to state 70
    TK_PR_CASE        shift, and go to state 71
    TK_PR_BREAK       shift, and go to state 72
    TK_PR_CONTINUE    shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74

    $default  reduce using rule 92 ($@4)

    vartype      go to state 75
    comsimples   go to state 164
    comdecl      go to state 77
    comvar       go to state 78
    comatr       go to state 79
    comio        go to state 80
    comin        go to state 81
    comout       go to state 82
    callfunc     go to state 83
    comshift     go to state 84
    RBCC         go to state 85
    comreturn    go to state 86
    combreak     go to state 87
    comcontinue  go to state 88
    comcase      go to state 89
    comflux      go to state 90
    comif        go to state 91
    comfore      go to state 92
    comfor       go to state 93
    listcomfor   go to state 165
    comwhile     go to state 94
    comdo        go to state 95
    comshitch    go to state 96
    combloco     go to state 97
    $@4          go to state 98


State 128

   91 comshitch: TK_PR_SWITCH '(' . exp ')' comsimples

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 166
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 129

   75 comcase: TK_PR_CASE TK_LIT_INT . ':' comsimples ';' combreak
   76        | TK_PR_CASE TK_LIT_INT . ':' comsimples ';' combreak comcase

    ':'  shift, and go to state 167


State 130

   66 comshift: TK_IDENTIFICADOR TK_OC_SL . litnumber

    TK_LIT_INT    shift, and go to state 101
    TK_LIT_FLOAT  shift, and go to state 102

    litnumber  go to state 168


State 131

   67 comshift: TK_IDENTIFICADOR TK_OC_SR . litnumber

    TK_LIT_INT    shift, and go to state 101
    TK_LIT_FLOAT  shift, and go to state 102

    litnumber  go to state 169


State 132

   57 comatr: TK_IDENTIFICADOR '!' . TK_IDENTIFICADOR '=' exp

    TK_IDENTIFICADOR  shift, and go to state 170


State 133

   55 comatr: TK_IDENTIFICADOR '=' . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 171
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 134

   56 comatr: TK_IDENTIFICADOR '[' . Vexplist ']' '=' exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 172
    folha      go to state 114
    Vexplist   go to state 173
    litnumber  go to state 115
    literal    go to state 116


State 135

   63 callfunc: TK_IDENTIFICADOR $@3 . '(' calldecl ')'

    '('  shift, and go to state 174


State 136

   50 comvar: vartype TK_IDENTIFICADOR .
   51       | vartype TK_IDENTIFICADOR . '[' IntList ']'
   52       | vartype TK_IDENTIFICADOR . TK_OC_LE initvar

    TK_OC_LE  shift, and go to state 175
    '['       shift, and go to state 176

    $default  reduce using rule 50 (comvar)


State 137

   93 combloco: $@4 '{' . listcom '}'

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_IF          shift, and go to state 60
    TK_PR_WHILE       shift, and go to state 61
    TK_PR_DO          shift, and go to state 62
    TK_PR_INPUT       shift, and go to state 63
    TK_PR_OUTPUT      shift, and go to state 64
    TK_PR_RETURN      shift, and go to state 65
    TK_PR_CONST       shift, and go to state 66
    TK_PR_STATIC      shift, and go to state 67
    TK_PR_FOREACH     shift, and go to state 68
    TK_PR_FOR         shift, and go to state 69
    TK_PR_SWITCH      shift, and go to state 70
    TK_PR_CASE        shift, and go to state 71
    TK_PR_BREAK       shift, and go to state 72
    TK_PR_CONTINUE    shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74

    '{'       reduce using rule 92 ($@4)
    $default  reduce using rule 97 (comandoCV)

    vartype      go to state 75
    comsimples   go to state 76
    comdecl      go to state 77
    comvar       go to state 78
    comatr       go to state 79
    comio        go to state 80
    comin        go to state 81
    comout       go to state 82
    callfunc     go to state 83
    comshift     go to state 84
    RBCC         go to state 85
    comreturn    go to state 86
    combreak     go to state 87
    comcontinue  go to state 88
    comcase      go to state 89
    comflux      go to state 90
    comif        go to state 91
    comfore      go to state 92
    comfor       go to state 93
    comwhile     go to state 94
    comdo        go to state 95
    comshitch    go to state 96
    combloco     go to state 97
    $@4          go to state 98
    listcom      go to state 177
    comandoCV    go to state 100


State 138

   31 funcdecl: vartype TK_IDENTIFICADOR $@1 '(' arg ')' $@2 '{' listcom '}' .

    $default  reduce using rule 31 (funcdecl)


State 139

   94 listcom: comandoCV ';' . listcom

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_IF          shift, and go to state 60
    TK_PR_WHILE       shift, and go to state 61
    TK_PR_DO          shift, and go to state 62
    TK_PR_INPUT       shift, and go to state 63
    TK_PR_OUTPUT      shift, and go to state 64
    TK_PR_RETURN      shift, and go to state 65
    TK_PR_CONST       shift, and go to state 66
    TK_PR_STATIC      shift, and go to state 67
    TK_PR_FOREACH     shift, and go to state 68
    TK_PR_FOR         shift, and go to state 69
    TK_PR_SWITCH      shift, and go to state 70
    TK_PR_CASE        shift, and go to state 71
    TK_PR_BREAK       shift, and go to state 72
    TK_PR_CONTINUE    shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74

    '{'       reduce using rule 92 ($@4)
    $default  reduce using rule 97 (comandoCV)

    vartype      go to state 75
    comsimples   go to state 76
    comdecl      go to state 77
    comvar       go to state 78
    comatr       go to state 79
    comio        go to state 80
    comin        go to state 81
    comout       go to state 82
    callfunc     go to state 83
    comshift     go to state 84
    RBCC         go to state 85
    comreturn    go to state 86
    combreak     go to state 87
    comcontinue  go to state 88
    comcase      go to state 89
    comflux      go to state 90
    comif        go to state 91
    comfore      go to state 92
    comfor       go to state 93
    comwhile     go to state 94
    comdo        go to state 95
    comshitch    go to state 96
    combloco     go to state 97
    $@4          go to state 98
    listcom      go to state 178
    comandoCV    go to state 100


State 140

  118 folha: TK_IDENTIFICADOR '[' . Vexplist ']'

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 172
    folha      go to state 114
    Vexplist   go to state 179
    litnumber  go to state 115
    literal    go to state 116


State 141

   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp
  112    | '+' exp .

    TK_OC_LE   shift, and go to state 146
    TK_OC_GE   shift, and go to state 147
    TK_OC_EQ   shift, and go to state 148
    TK_OC_NE   shift, and go to state 149
    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151
    '*'        shift, and go to state 154
    '/'        shift, and go to state 155
    '%'        shift, and go to state 156
    '<'        shift, and go to state 157
    '>'        shift, and go to state 158

    $default  reduce using rule 112 (exp)


State 142

   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp
  113    | '-' exp .

    TK_OC_LE   shift, and go to state 146
    TK_OC_GE   shift, and go to state 147
    TK_OC_EQ   shift, and go to state 148
    TK_OC_NE   shift, and go to state 149
    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151
    '*'        shift, and go to state 154
    '/'        shift, and go to state 155
    '%'        shift, and go to state 156
    '<'        shift, and go to state 157
    '>'        shift, and go to state 158

    $default  reduce using rule 113 (exp)


State 143

   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp
  114    | '!' exp .

    $default  reduce using rule 114 (exp)


State 144

   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp
  111    | '(' exp . ')'

    TK_OC_LE   shift, and go to state 146
    TK_OC_GE   shift, and go to state 147
    TK_OC_EQ   shift, and go to state 148
    TK_OC_NE   shift, and go to state 149
    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151
    '+'        shift, and go to state 152
    '-'        shift, and go to state 153
    '*'        shift, and go to state 154
    '/'        shift, and go to state 155
    '%'        shift, and go to state 156
    '<'        shift, and go to state 157
    '>'        shift, and go to state 158
    ')'        shift, and go to state 180


State 145

   83 comif: TK_PR_IF exp TK_PR_THEN . comsimples ';'
   84      | TK_PR_IF exp TK_PR_THEN . comsimples ';' TK_PR_ELSE comsimples

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_IF          shift, and go to state 60
    TK_PR_WHILE       shift, and go to state 61
    TK_PR_DO          shift, and go to state 62
    TK_PR_INPUT       shift, and go to state 63
    TK_PR_OUTPUT      shift, and go to state 64
    TK_PR_RETURN      shift, and go to state 65
    TK_PR_CONST       shift, and go to state 66
    TK_PR_STATIC      shift, and go to state 67
    TK_PR_FOREACH     shift, and go to state 68
    TK_PR_FOR         shift, and go to state 69
    TK_PR_SWITCH      shift, and go to state 70
    TK_PR_CASE        shift, and go to state 71
    TK_PR_BREAK       shift, and go to state 72
    TK_PR_CONTINUE    shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74

    $default  reduce using rule 92 ($@4)

    vartype      go to state 75
    comsimples   go to state 181
    comdecl      go to state 77
    comvar       go to state 78
    comatr       go to state 79
    comio        go to state 80
    comin        go to state 81
    comout       go to state 82
    callfunc     go to state 83
    comshift     go to state 84
    RBCC         go to state 85
    comreturn    go to state 86
    combreak     go to state 87
    comcontinue  go to state 88
    comcase      go to state 89
    comflux      go to state 90
    comif        go to state 91
    comfore      go to state 92
    comfor       go to state 93
    comwhile     go to state 94
    comdo        go to state 95
    comshitch    go to state 96
    combloco     go to state 97
    $@4          go to state 98


State 146

  105 exp: exp TK_OC_LE . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 182
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 147

  106 exp: exp TK_OC_GE . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 183
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 148

  107 exp: exp TK_OC_EQ . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 184
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 149

  108 exp: exp TK_OC_NE . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 185
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 150

  109 exp: exp TK_OC_AND . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 186
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 151

  110 exp: exp TK_OC_OR . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 187
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 152

   98 exp: exp '+' . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 188
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 153

   99 exp: exp '-' . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 189
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 154

  100 exp: exp '*' . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 190
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 155

  101 exp: exp '/' . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 191
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 156

  102 exp: exp '%' . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 192
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 157

  103 exp: exp '<' . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 193
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 158

  104 exp: exp '>' . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 194
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 159

   89 comwhile: TK_PR_WHILE '(' exp . ')' TK_PR_DO comsimples ';'
   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_OC_LE   shift, and go to state 146
    TK_OC_GE   shift, and go to state 147
    TK_OC_EQ   shift, and go to state 148
    TK_OC_NE   shift, and go to state 149
    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151
    '+'        shift, and go to state 152
    '-'        shift, and go to state 153
    '*'        shift, and go to state 154
    '/'        shift, and go to state 155
    '%'        shift, and go to state 156
    '<'        shift, and go to state 157
    '>'        shift, and go to state 158
    ')'        shift, and go to state 195


State 160

   90 comdo: TK_PR_DO comsimples ';' . TK_PR_WHILE '(' exp ')' ';'

    TK_PR_WHILE  shift, and go to state 196


State 161

  122 listexp: exp ',' . listexp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 120
    folha      go to state 114
    listexp    go to state 197
    litnumber  go to state 115
    literal    go to state 116


State 162

   47 comdecl: TK_PR_STATIC TK_PR_CONST comvar .

    $default  reduce using rule 47 (comdecl)


State 163

   85 comfore: TK_PR_FOREACH '(' TK_IDENTIFICADOR . ':' listexp ')' comsimples

    ':'  shift, and go to state 198


State 164

   88 listcomfor: comsimples .

    $default  reduce using rule 88 (listcomfor)


State 165

   86 comfor: TK_PR_FOR '(' listcomfor . ':' exp ':' listcomfor ')' comsimples
   87 listcomfor: listcomfor . ',' comsimples

    ':'  shift, and go to state 199
    ','  shift, and go to state 200


State 166

   91 comshitch: TK_PR_SWITCH '(' exp . ')' comsimples
   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_OC_LE   shift, and go to state 146
    TK_OC_GE   shift, and go to state 147
    TK_OC_EQ   shift, and go to state 148
    TK_OC_NE   shift, and go to state 149
    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151
    '+'        shift, and go to state 152
    '-'        shift, and go to state 153
    '*'        shift, and go to state 154
    '/'        shift, and go to state 155
    '%'        shift, and go to state 156
    '<'        shift, and go to state 157
    '>'        shift, and go to state 158
    ')'        shift, and go to state 201


State 167

   75 comcase: TK_PR_CASE TK_LIT_INT ':' . comsimples ';' combreak
   76        | TK_PR_CASE TK_LIT_INT ':' . comsimples ';' combreak comcase

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_IF          shift, and go to state 60
    TK_PR_WHILE       shift, and go to state 61
    TK_PR_DO          shift, and go to state 62
    TK_PR_INPUT       shift, and go to state 63
    TK_PR_OUTPUT      shift, and go to state 64
    TK_PR_RETURN      shift, and go to state 65
    TK_PR_CONST       shift, and go to state 66
    TK_PR_STATIC      shift, and go to state 67
    TK_PR_FOREACH     shift, and go to state 68
    TK_PR_FOR         shift, and go to state 69
    TK_PR_SWITCH      shift, and go to state 70
    TK_PR_CASE        shift, and go to state 71
    TK_PR_BREAK       shift, and go to state 72
    TK_PR_CONTINUE    shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74

    $default  reduce using rule 92 ($@4)

    vartype      go to state 75
    comsimples   go to state 202
    comdecl      go to state 77
    comvar       go to state 78
    comatr       go to state 79
    comio        go to state 80
    comin        go to state 81
    comout       go to state 82
    callfunc     go to state 83
    comshift     go to state 84
    RBCC         go to state 85
    comreturn    go to state 86
    combreak     go to state 87
    comcontinue  go to state 88
    comcase      go to state 89
    comflux      go to state 90
    comif        go to state 91
    comfore      go to state 92
    comfor       go to state 93
    comwhile     go to state 94
    comdo        go to state 95
    comshitch    go to state 96
    combloco     go to state 97
    $@4          go to state 98


State 168

   66 comshift: TK_IDENTIFICADOR TK_OC_SL litnumber .

    $default  reduce using rule 66 (comshift)


State 169

   67 comshift: TK_IDENTIFICADOR TK_OC_SR litnumber .

    $default  reduce using rule 67 (comshift)


State 170

   57 comatr: TK_IDENTIFICADOR '!' TK_IDENTIFICADOR . '=' exp

    '='  shift, and go to state 203


State 171

   55 comatr: TK_IDENTIFICADOR '=' exp .
   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_OC_LE   shift, and go to state 146
    TK_OC_GE   shift, and go to state 147
    TK_OC_EQ   shift, and go to state 148
    TK_OC_NE   shift, and go to state 149
    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151
    '+'        shift, and go to state 152
    '-'        shift, and go to state 153
    '*'        shift, and go to state 154
    '/'        shift, and go to state 155
    '%'        shift, and go to state 156
    '<'        shift, and go to state 157
    '>'        shift, and go to state 158

    $default  reduce using rule 55 (comatr)


State 172

   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp
  120 Vexplist: exp . ',' Vexplist
  121         | exp .

    TK_OC_LE   shift, and go to state 146
    TK_OC_GE   shift, and go to state 147
    TK_OC_EQ   shift, and go to state 148
    TK_OC_NE   shift, and go to state 149
    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151
    '+'        shift, and go to state 152
    '-'        shift, and go to state 153
    '*'        shift, and go to state 154
    '/'        shift, and go to state 155
    '%'        shift, and go to state 156
    '<'        shift, and go to state 157
    '>'        shift, and go to state 158
    ','        shift, and go to state 204

    $default  reduce using rule 121 (Vexplist)


State 173

   56 comatr: TK_IDENTIFICADOR '[' Vexplist . ']' '=' exp

    ']'  shift, and go to state 205


State 174

   63 callfunc: TK_IDENTIFICADOR $@3 '(' . calldecl ')'

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    $default  reduce using rule 65 (calldecl)

    callfunc   go to state 112
    calldecl   go to state 206
    exp        go to state 120
    folha      go to state 114
    listexp    go to state 207
    litnumber  go to state 115
    literal    go to state 116


State 175

   52 comvar: vartype TK_IDENTIFICADOR TK_OC_LE . initvar

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 208

    initvar    go to state 209
    litnumber  go to state 115
    literal    go to state 210


State 176

   51 comvar: vartype TK_IDENTIFICADOR '[' . IntList ']'

    TK_LIT_INT  shift, and go to state 35

    IntList  go to state 211


State 177

   93 combloco: $@4 '{' listcom . '}'

    '}'  shift, and go to state 212


State 178

   94 listcom: comandoCV ';' listcom .

    $default  reduce using rule 94 (listcom)


State 179

  118 folha: TK_IDENTIFICADOR '[' Vexplist . ']'

    ']'  shift, and go to state 213


State 180

  111 exp: '(' exp ')' .

    $default  reduce using rule 111 (exp)


State 181

   83 comif: TK_PR_IF exp TK_PR_THEN comsimples . ';'
   84      | TK_PR_IF exp TK_PR_THEN comsimples . ';' TK_PR_ELSE comsimples

    ';'  shift, and go to state 214


State 182

   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  105    | exp TK_OC_LE exp .
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151

    $default  reduce using rule 105 (exp)


State 183

   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  106    | exp TK_OC_GE exp .
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151

    $default  reduce using rule 106 (exp)


State 184

   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  107    | exp TK_OC_EQ exp .
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151

    $default  reduce using rule 107 (exp)


State 185

   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  108    | exp TK_OC_NE exp .
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151

    $default  reduce using rule 108 (exp)


State 186

   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  109    | exp TK_OC_AND exp .
  110    | exp . TK_OC_OR exp

    $default  reduce using rule 109 (exp)


State 187

   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp
  110    | exp TK_OC_OR exp .

    $default  reduce using rule 110 (exp)


State 188

   98 exp: exp . '+' exp
   98    | exp '+' exp .
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_OC_LE   shift, and go to state 146
    TK_OC_GE   shift, and go to state 147
    TK_OC_EQ   shift, and go to state 148
    TK_OC_NE   shift, and go to state 149
    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151
    '*'        shift, and go to state 154
    '/'        shift, and go to state 155
    '%'        shift, and go to state 156
    '<'        shift, and go to state 157
    '>'        shift, and go to state 158

    $default  reduce using rule 98 (exp)


State 189

   98 exp: exp . '+' exp
   99    | exp . '-' exp
   99    | exp '-' exp .
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_OC_LE   shift, and go to state 146
    TK_OC_GE   shift, and go to state 147
    TK_OC_EQ   shift, and go to state 148
    TK_OC_NE   shift, and go to state 149
    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151
    '*'        shift, and go to state 154
    '/'        shift, and go to state 155
    '%'        shift, and go to state 156
    '<'        shift, and go to state 157
    '>'        shift, and go to state 158

    $default  reduce using rule 99 (exp)


State 190

   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  100    | exp '*' exp .
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_OC_LE   shift, and go to state 146
    TK_OC_GE   shift, and go to state 147
    TK_OC_EQ   shift, and go to state 148
    TK_OC_NE   shift, and go to state 149
    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151
    '<'        shift, and go to state 157
    '>'        shift, and go to state 158

    $default  reduce using rule 100 (exp)


State 191

   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  101    | exp '/' exp .
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_OC_LE   shift, and go to state 146
    TK_OC_GE   shift, and go to state 147
    TK_OC_EQ   shift, and go to state 148
    TK_OC_NE   shift, and go to state 149
    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151
    '<'        shift, and go to state 157
    '>'        shift, and go to state 158

    $default  reduce using rule 101 (exp)


State 192

   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  102    | exp '%' exp .
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_OC_LE   shift, and go to state 146
    TK_OC_GE   shift, and go to state 147
    TK_OC_EQ   shift, and go to state 148
    TK_OC_NE   shift, and go to state 149
    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151
    '<'        shift, and go to state 157
    '>'        shift, and go to state 158

    $default  reduce using rule 102 (exp)


State 193

   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  103    | exp '<' exp .
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151

    $default  reduce using rule 103 (exp)


State 194

   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  104    | exp '>' exp .
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151

    $default  reduce using rule 104 (exp)


State 195

   89 comwhile: TK_PR_WHILE '(' exp ')' . TK_PR_DO comsimples ';'

    TK_PR_DO  shift, and go to state 215


State 196

   90 comdo: TK_PR_DO comsimples ';' TK_PR_WHILE . '(' exp ')' ';'

    '('  shift, and go to state 216


State 197

  122 listexp: exp ',' listexp .

    $default  reduce using rule 122 (listexp)


State 198

   85 comfore: TK_PR_FOREACH '(' TK_IDENTIFICADOR ':' . listexp ')' comsimples

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 120
    folha      go to state 114
    listexp    go to state 217
    litnumber  go to state 115
    literal    go to state 116


State 199

   86 comfor: TK_PR_FOR '(' listcomfor ':' . exp ':' listcomfor ')' comsimples

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 218
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 200

   87 listcomfor: listcomfor ',' . comsimples

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_IF          shift, and go to state 60
    TK_PR_WHILE       shift, and go to state 61
    TK_PR_DO          shift, and go to state 62
    TK_PR_INPUT       shift, and go to state 63
    TK_PR_OUTPUT      shift, and go to state 64
    TK_PR_RETURN      shift, and go to state 65
    TK_PR_CONST       shift, and go to state 66
    TK_PR_STATIC      shift, and go to state 67
    TK_PR_FOREACH     shift, and go to state 68
    TK_PR_FOR         shift, and go to state 69
    TK_PR_SWITCH      shift, and go to state 70
    TK_PR_CASE        shift, and go to state 71
    TK_PR_BREAK       shift, and go to state 72
    TK_PR_CONTINUE    shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74

    $default  reduce using rule 92 ($@4)

    vartype      go to state 75
    comsimples   go to state 219
    comdecl      go to state 77
    comvar       go to state 78
    comatr       go to state 79
    comio        go to state 80
    comin        go to state 81
    comout       go to state 82
    callfunc     go to state 83
    comshift     go to state 84
    RBCC         go to state 85
    comreturn    go to state 86
    combreak     go to state 87
    comcontinue  go to state 88
    comcase      go to state 89
    comflux      go to state 90
    comif        go to state 91
    comfore      go to state 92
    comfor       go to state 93
    comwhile     go to state 94
    comdo        go to state 95
    comshitch    go to state 96
    combloco     go to state 97
    $@4          go to state 98


State 201

   91 comshitch: TK_PR_SWITCH '(' exp ')' . comsimples

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_IF          shift, and go to state 60
    TK_PR_WHILE       shift, and go to state 61
    TK_PR_DO          shift, and go to state 62
    TK_PR_INPUT       shift, and go to state 63
    TK_PR_OUTPUT      shift, and go to state 64
    TK_PR_RETURN      shift, and go to state 65
    TK_PR_CONST       shift, and go to state 66
    TK_PR_STATIC      shift, and go to state 67
    TK_PR_FOREACH     shift, and go to state 68
    TK_PR_FOR         shift, and go to state 69
    TK_PR_SWITCH      shift, and go to state 70
    TK_PR_CASE        shift, and go to state 71
    TK_PR_BREAK       shift, and go to state 72
    TK_PR_CONTINUE    shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74

    $default  reduce using rule 92 ($@4)

    vartype      go to state 75
    comsimples   go to state 220
    comdecl      go to state 77
    comvar       go to state 78
    comatr       go to state 79
    comio        go to state 80
    comin        go to state 81
    comout       go to state 82
    callfunc     go to state 83
    comshift     go to state 84
    RBCC         go to state 85
    comreturn    go to state 86
    combreak     go to state 87
    comcontinue  go to state 88
    comcase      go to state 89
    comflux      go to state 90
    comif        go to state 91
    comfore      go to state 92
    comfor       go to state 93
    comwhile     go to state 94
    comdo        go to state 95
    comshitch    go to state 96
    combloco     go to state 97
    $@4          go to state 98


State 202

   75 comcase: TK_PR_CASE TK_LIT_INT ':' comsimples . ';' combreak
   76        | TK_PR_CASE TK_LIT_INT ':' comsimples . ';' combreak comcase

    ';'  shift, and go to state 221


State 203

   57 comatr: TK_IDENTIFICADOR '!' TK_IDENTIFICADOR '=' . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 222
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 204

  120 Vexplist: exp ',' . Vexplist

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 172
    folha      go to state 114
    Vexplist   go to state 223
    litnumber  go to state 115
    literal    go to state 116


State 205

   56 comatr: TK_IDENTIFICADOR '[' Vexplist ']' . '=' exp

    '='  shift, and go to state 224


State 206

   63 callfunc: TK_IDENTIFICADOR $@3 '(' calldecl . ')'

    ')'  shift, and go to state 225


State 207

   64 calldecl: listexp .

    $default  reduce using rule 64 (calldecl)


State 208

   53 initvar: TK_IDENTIFICADOR .

    $default  reduce using rule 53 (initvar)


State 209

   52 comvar: vartype TK_IDENTIFICADOR TK_OC_LE initvar .

    $default  reduce using rule 52 (comvar)


State 210

   54 initvar: literal .

    $default  reduce using rule 54 (initvar)


State 211

   51 comvar: vartype TK_IDENTIFICADOR '[' IntList . ']'

    ']'  shift, and go to state 226


State 212

   93 combloco: $@4 '{' listcom '}' .

    $default  reduce using rule 93 (combloco)


State 213

  118 folha: TK_IDENTIFICADOR '[' Vexplist ']' .

    $default  reduce using rule 118 (folha)


State 214

   83 comif: TK_PR_IF exp TK_PR_THEN comsimples ';' .
   84      | TK_PR_IF exp TK_PR_THEN comsimples ';' . TK_PR_ELSE comsimples

    TK_PR_ELSE  shift, and go to state 227

    $default  reduce using rule 83 (comif)


State 215

   89 comwhile: TK_PR_WHILE '(' exp ')' TK_PR_DO . comsimples ';'

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_IF          shift, and go to state 60
    TK_PR_WHILE       shift, and go to state 61
    TK_PR_DO          shift, and go to state 62
    TK_PR_INPUT       shift, and go to state 63
    TK_PR_OUTPUT      shift, and go to state 64
    TK_PR_RETURN      shift, and go to state 65
    TK_PR_CONST       shift, and go to state 66
    TK_PR_STATIC      shift, and go to state 67
    TK_PR_FOREACH     shift, and go to state 68
    TK_PR_FOR         shift, and go to state 69
    TK_PR_SWITCH      shift, and go to state 70
    TK_PR_CASE        shift, and go to state 71
    TK_PR_BREAK       shift, and go to state 72
    TK_PR_CONTINUE    shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74

    $default  reduce using rule 92 ($@4)

    vartype      go to state 75
    comsimples   go to state 228
    comdecl      go to state 77
    comvar       go to state 78
    comatr       go to state 79
    comio        go to state 80
    comin        go to state 81
    comout       go to state 82
    callfunc     go to state 83
    comshift     go to state 84
    RBCC         go to state 85
    comreturn    go to state 86
    combreak     go to state 87
    comcontinue  go to state 88
    comcase      go to state 89
    comflux      go to state 90
    comif        go to state 91
    comfore      go to state 92
    comfor       go to state 93
    comwhile     go to state 94
    comdo        go to state 95
    comshitch    go to state 96
    combloco     go to state 97
    $@4          go to state 98


State 216

   90 comdo: TK_PR_DO comsimples ';' TK_PR_WHILE '(' . exp ')' ';'

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 229
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 217

   85 comfore: TK_PR_FOREACH '(' TK_IDENTIFICADOR ':' listexp . ')' comsimples

    ')'  shift, and go to state 230


State 218

   86 comfor: TK_PR_FOR '(' listcomfor ':' exp . ':' listcomfor ')' comsimples
   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_OC_LE   shift, and go to state 146
    TK_OC_GE   shift, and go to state 147
    TK_OC_EQ   shift, and go to state 148
    TK_OC_NE   shift, and go to state 149
    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151
    '+'        shift, and go to state 152
    '-'        shift, and go to state 153
    '*'        shift, and go to state 154
    '/'        shift, and go to state 155
    '%'        shift, and go to state 156
    '<'        shift, and go to state 157
    '>'        shift, and go to state 158
    ':'        shift, and go to state 231


State 219

   87 listcomfor: listcomfor ',' comsimples .

    $default  reduce using rule 87 (listcomfor)


State 220

   91 comshitch: TK_PR_SWITCH '(' exp ')' comsimples .

    $default  reduce using rule 91 (comshitch)


State 221

   75 comcase: TK_PR_CASE TK_LIT_INT ':' comsimples ';' . combreak
   76        | TK_PR_CASE TK_LIT_INT ':' comsimples ';' . combreak comcase

    TK_PR_BREAK  shift, and go to state 72

    combreak  go to state 232


State 222

   57 comatr: TK_IDENTIFICADOR '!' TK_IDENTIFICADOR '=' exp .
   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_OC_LE   shift, and go to state 146
    TK_OC_GE   shift, and go to state 147
    TK_OC_EQ   shift, and go to state 148
    TK_OC_NE   shift, and go to state 149
    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151
    '+'        shift, and go to state 152
    '-'        shift, and go to state 153
    '*'        shift, and go to state 154
    '/'        shift, and go to state 155
    '%'        shift, and go to state 156
    '<'        shift, and go to state 157
    '>'        shift, and go to state 158

    $default  reduce using rule 57 (comatr)


State 223

  120 Vexplist: exp ',' Vexplist .

    $default  reduce using rule 120 (Vexplist)


State 224

   56 comatr: TK_IDENTIFICADOR '[' Vexplist ']' '=' . exp

    TK_LIT_INT        shift, and go to state 101
    TK_LIT_FLOAT      shift, and go to state 102
    TK_LIT_FALSE      shift, and go to state 103
    TK_LIT_TRUE       shift, and go to state 104
    TK_LIT_CHAR       shift, and go to state 105
    TK_LIT_STRING     shift, and go to state 106
    TK_IDENTIFICADOR  shift, and go to state 107
    '+'               shift, and go to state 108
    '-'               shift, and go to state 109
    '!'               shift, and go to state 110
    '('               shift, and go to state 111

    callfunc   go to state 112
    exp        go to state 233
    folha      go to state 114
    litnumber  go to state 115
    literal    go to state 116


State 225

   63 callfunc: TK_IDENTIFICADOR $@3 '(' calldecl ')' .

    $default  reduce using rule 63 (callfunc)


State 226

   51 comvar: vartype TK_IDENTIFICADOR '[' IntList ']' .

    $default  reduce using rule 51 (comvar)


State 227

   84 comif: TK_PR_IF exp TK_PR_THEN comsimples ';' TK_PR_ELSE . comsimples

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_IF          shift, and go to state 60
    TK_PR_WHILE       shift, and go to state 61
    TK_PR_DO          shift, and go to state 62
    TK_PR_INPUT       shift, and go to state 63
    TK_PR_OUTPUT      shift, and go to state 64
    TK_PR_RETURN      shift, and go to state 65
    TK_PR_CONST       shift, and go to state 66
    TK_PR_STATIC      shift, and go to state 67
    TK_PR_FOREACH     shift, and go to state 68
    TK_PR_FOR         shift, and go to state 69
    TK_PR_SWITCH      shift, and go to state 70
    TK_PR_CASE        shift, and go to state 71
    TK_PR_BREAK       shift, and go to state 72
    TK_PR_CONTINUE    shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74

    $default  reduce using rule 92 ($@4)

    vartype      go to state 75
    comsimples   go to state 234
    comdecl      go to state 77
    comvar       go to state 78
    comatr       go to state 79
    comio        go to state 80
    comin        go to state 81
    comout       go to state 82
    callfunc     go to state 83
    comshift     go to state 84
    RBCC         go to state 85
    comreturn    go to state 86
    combreak     go to state 87
    comcontinue  go to state 88
    comcase      go to state 89
    comflux      go to state 90
    comif        go to state 91
    comfore      go to state 92
    comfor       go to state 93
    comwhile     go to state 94
    comdo        go to state 95
    comshitch    go to state 96
    combloco     go to state 97
    $@4          go to state 98


State 228

   89 comwhile: TK_PR_WHILE '(' exp ')' TK_PR_DO comsimples . ';'

    ';'  shift, and go to state 235


State 229

   90 comdo: TK_PR_DO comsimples ';' TK_PR_WHILE '(' exp . ')' ';'
   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_OC_LE   shift, and go to state 146
    TK_OC_GE   shift, and go to state 147
    TK_OC_EQ   shift, and go to state 148
    TK_OC_NE   shift, and go to state 149
    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151
    '+'        shift, and go to state 152
    '-'        shift, and go to state 153
    '*'        shift, and go to state 154
    '/'        shift, and go to state 155
    '%'        shift, and go to state 156
    '<'        shift, and go to state 157
    '>'        shift, and go to state 158
    ')'        shift, and go to state 236


State 230

   85 comfore: TK_PR_FOREACH '(' TK_IDENTIFICADOR ':' listexp ')' . comsimples

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_IF          shift, and go to state 60
    TK_PR_WHILE       shift, and go to state 61
    TK_PR_DO          shift, and go to state 62
    TK_PR_INPUT       shift, and go to state 63
    TK_PR_OUTPUT      shift, and go to state 64
    TK_PR_RETURN      shift, and go to state 65
    TK_PR_CONST       shift, and go to state 66
    TK_PR_STATIC      shift, and go to state 67
    TK_PR_FOREACH     shift, and go to state 68
    TK_PR_FOR         shift, and go to state 69
    TK_PR_SWITCH      shift, and go to state 70
    TK_PR_CASE        shift, and go to state 71
    TK_PR_BREAK       shift, and go to state 72
    TK_PR_CONTINUE    shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74

    $default  reduce using rule 92 ($@4)

    vartype      go to state 75
    comsimples   go to state 237
    comdecl      go to state 77
    comvar       go to state 78
    comatr       go to state 79
    comio        go to state 80
    comin        go to state 81
    comout       go to state 82
    callfunc     go to state 83
    comshift     go to state 84
    RBCC         go to state 85
    comreturn    go to state 86
    combreak     go to state 87
    comcontinue  go to state 88
    comcase      go to state 89
    comflux      go to state 90
    comif        go to state 91
    comfore      go to state 92
    comfor       go to state 93
    comwhile     go to state 94
    comdo        go to state 95
    comshitch    go to state 96
    combloco     go to state 97
    $@4          go to state 98


State 231

   86 comfor: TK_PR_FOR '(' listcomfor ':' exp ':' . listcomfor ')' comsimples

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_IF          shift, and go to state 60
    TK_PR_WHILE       shift, and go to state 61
    TK_PR_DO          shift, and go to state 62
    TK_PR_INPUT       shift, and go to state 63
    TK_PR_OUTPUT      shift, and go to state 64
    TK_PR_RETURN      shift, and go to state 65
    TK_PR_CONST       shift, and go to state 66
    TK_PR_STATIC      shift, and go to state 67
    TK_PR_FOREACH     shift, and go to state 68
    TK_PR_FOR         shift, and go to state 69
    TK_PR_SWITCH      shift, and go to state 70
    TK_PR_CASE        shift, and go to state 71
    TK_PR_BREAK       shift, and go to state 72
    TK_PR_CONTINUE    shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74

    $default  reduce using rule 92 ($@4)

    vartype      go to state 75
    comsimples   go to state 164
    comdecl      go to state 77
    comvar       go to state 78
    comatr       go to state 79
    comio        go to state 80
    comin        go to state 81
    comout       go to state 82
    callfunc     go to state 83
    comshift     go to state 84
    RBCC         go to state 85
    comreturn    go to state 86
    combreak     go to state 87
    comcontinue  go to state 88
    comcase      go to state 89
    comflux      go to state 90
    comif        go to state 91
    comfore      go to state 92
    comfor       go to state 93
    listcomfor   go to state 238
    comwhile     go to state 94
    comdo        go to state 95
    comshitch    go to state 96
    combloco     go to state 97
    $@4          go to state 98


State 232

   75 comcase: TK_PR_CASE TK_LIT_INT ':' comsimples ';' combreak .
   76        | TK_PR_CASE TK_LIT_INT ':' comsimples ';' combreak . comcase

    TK_PR_CASE  shift, and go to state 71

    $default  reduce using rule 75 (comcase)

    comcase  go to state 239


State 233

   56 comatr: TK_IDENTIFICADOR '[' Vexplist ']' '=' exp .
   98 exp: exp . '+' exp
   99    | exp . '-' exp
  100    | exp . '*' exp
  101    | exp . '/' exp
  102    | exp . '%' exp
  103    | exp . '<' exp
  104    | exp . '>' exp
  105    | exp . TK_OC_LE exp
  106    | exp . TK_OC_GE exp
  107    | exp . TK_OC_EQ exp
  108    | exp . TK_OC_NE exp
  109    | exp . TK_OC_AND exp
  110    | exp . TK_OC_OR exp

    TK_OC_LE   shift, and go to state 146
    TK_OC_GE   shift, and go to state 147
    TK_OC_EQ   shift, and go to state 148
    TK_OC_NE   shift, and go to state 149
    TK_OC_AND  shift, and go to state 150
    TK_OC_OR   shift, and go to state 151
    '+'        shift, and go to state 152
    '-'        shift, and go to state 153
    '*'        shift, and go to state 154
    '/'        shift, and go to state 155
    '%'        shift, and go to state 156
    '<'        shift, and go to state 157
    '>'        shift, and go to state 158

    $default  reduce using rule 56 (comatr)


State 234

   84 comif: TK_PR_IF exp TK_PR_THEN comsimples ';' TK_PR_ELSE comsimples .

    $default  reduce using rule 84 (comif)


State 235

   89 comwhile: TK_PR_WHILE '(' exp ')' TK_PR_DO comsimples ';' .

    $default  reduce using rule 89 (comwhile)


State 236

   90 comdo: TK_PR_DO comsimples ';' TK_PR_WHILE '(' exp ')' . ';'

    ';'  shift, and go to state 240


State 237

   85 comfore: TK_PR_FOREACH '(' TK_IDENTIFICADOR ':' listexp ')' comsimples .

    $default  reduce using rule 85 (comfore)


State 238

   86 comfor: TK_PR_FOR '(' listcomfor ':' exp ':' listcomfor . ')' comsimples
   87 listcomfor: listcomfor . ',' comsimples

    ')'  shift, and go to state 241
    ','  shift, and go to state 200


State 239

   76 comcase: TK_PR_CASE TK_LIT_INT ':' comsimples ';' combreak comcase .

    $default  reduce using rule 76 (comcase)


State 240

   90 comdo: TK_PR_DO comsimples ';' TK_PR_WHILE '(' exp ')' ';' .

    $default  reduce using rule 90 (comdo)


State 241

   86 comfor: TK_PR_FOR '(' listcomfor ':' exp ':' listcomfor ')' . comsimples

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_STRING      shift, and go to state 5
    TK_PR_IF          shift, and go to state 60
    TK_PR_WHILE       shift, and go to state 61
    TK_PR_DO          shift, and go to state 62
    TK_PR_INPUT       shift, and go to state 63
    TK_PR_OUTPUT      shift, and go to state 64
    TK_PR_RETURN      shift, and go to state 65
    TK_PR_CONST       shift, and go to state 66
    TK_PR_STATIC      shift, and go to state 67
    TK_PR_FOREACH     shift, and go to state 68
    TK_PR_FOR         shift, and go to state 69
    TK_PR_SWITCH      shift, and go to state 70
    TK_PR_CASE        shift, and go to state 71
    TK_PR_BREAK       shift, and go to state 72
    TK_PR_CONTINUE    shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74

    $default  reduce using rule 92 ($@4)

    vartype      go to state 75
    comsimples   go to state 242
    comdecl      go to state 77
    comvar       go to state 78
    comatr       go to state 79
    comio        go to state 80
    comin        go to state 81
    comout       go to state 82
    callfunc     go to state 83
    comshift     go to state 84
    RBCC         go to state 85
    comreturn    go to state 86
    combreak     go to state 87
    comcontinue  go to state 88
    comcase      go to state 89
    comflux      go to state 90
    comif        go to state 91
    comfore      go to state 92
    comfor       go to state 93
    comwhile     go to state 94
    comdo        go to state 95
    comshitch    go to state 96
    combloco     go to state 97
    $@4          go to state 98


State 242

   86 comfor: TK_PR_FOR '(' listcomfor ':' exp ':' listcomfor ')' comsimples .

    $default  reduce using rule 86 (comfor)
